package test.transformaciones;

import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

public class GeneraXSLT_out_producto {
	
	public static void main(String[] args)
    {
    	String HoraIni       = new SimpleDateFormat("HH:mm:ss").format(new Date());	
    	
    	String[] etiqueta           = {"//ESCALARES/CodErr", "//ESCALARES/DesErr", "//ESCALARES/DesErr"};
    	String[] paramEtiqueta      = {"CODERR", "DESERR", "MSGUSUARIO"};
    	String[] Etiquetaescalares  = {"NUMEROPERSONA", "TIPODOCUMENTO", "NUMERODOCUMENTO", "TIPOPERSONA", "APELLIDOPATERNO", "APELLIDOMATERNO", "NOMBREPERSONA", "NOMBREFANTASIA", "SEGMENTO", "GLSEGMENTO", "GLSEGMENTO", "SUBSEGMENTO", "GLSUBSEGMENTO", "MSGID"};
    	String[] escalares          = {"//ESCALARES/NumeroPersona", "//ESCALARES/TipoDocumento", "//ESCALARES/NumeroDocumento", "//ESCALARES/TipoPersona", "//ESCALARES/ApellidoPaterno", "//ESCALARES/ApellidoMaterno", "//ESCALARES/NombrePersona", "//ESCALARES/NombreFantasia", "//ESCALARES/SEGMENTO", "//ESCALARES/GLSEGMENTO", "//ESCALARES/SUBSEGMENTO", "//ESCALARES/GLSUBSEGMENTO", "//ESCALARES/MS1GID"};
    	String[] Matrices           = {"NUMEROCONTRATO", "PRODUCTO", "SUBPRODUCTO", "MONTODISPONIBLE", "MONTOUTILIZADO", "GLOSACORTA", "OFICINACONTRATO","CUPO", "GLOSAESTADO", "NUMEROPAN", "ESTADOOPERACION", "ESTADORELACION", "CODIGOMONEDA", "AGRUPACIONCOMERCIAL"};
    	String[] Captaciones        = {"NumeroContrato", "Producto", "Subproducto", "MontoDisponible", "MontoUtilizado", "GlosaCorta", "OficinaContrato","Cupo", "GlosaEstado", "NumeroPAN", "EstadoOperacion", "EstadoRelacion", "CodigoMoneda", "AgrupacionComercial"};
    	String[] MActivos           = {"NUMEROCONTRATO", "PRODUCTO", "SUBPRODUCTO", "MONTOCUOTA", "MONEDACUOTA", "DEUDAACTUALIZADA", "MONTOPAGO", "GLOSACORTA", "OFICINA", "GLOSAESTADO", "ESTADOOPERACION", "ESTADORELACION", "CODIGOMONEDA", "AGRUPACIONCOMERCIAL"};
    	String[] CActivos			= {"NumeroContrato", "Producto", "Subproducto", "MontoCuota", "MonedaCuota", "DeudaActualizada", "MontoPago", "GlosaCorta", "Oficina", "GlosaEstado", "EstadoOperacion", "EstadoRelacion", "CodigoMoneda", "AgrupacionComercial"};
    	String[] MPasivos           = {"NUMEROCONTRATO", "PRODUCTO", "SUBPRODUCTO", "MONTOINVERSION", "VALORCOBRO", "DEPOSITOS", "GLOSACORTA", "OFICINA", "GLOSAESTADO", "ESTADOOPERACION", "ESTADORELACION", "CODIGOMONEDA", "AGRUPACIONCOMERCIAL"};
    	String[] CPasivos           = {"NumeroContrato", "Producto", "Subproducto", "MontoInversion", "ValorCobro", "Depositos", "GlosaCorta", "Oficina", "GlosaEstado", "EstadoOperacion", "EstadoRelacion", "CodigoMoneda", "AgrupacionComercial"};
   
        FileWriter fichero = null;
        PrintWriter pw = null;
        
        try
        {
            fichero = new FileWriter("c:/Users/Lozoronca/Documents/cabeceraXSL.xsl");
            pw = new PrintWriter(fichero);

            for (int i = 0; i < 1; i++){	
            	/* Cabecera ws_<name>_input   */
                pw.println("<?xml version=" + "\"" + "1.0" + "\"" + " encoding=" + "\"" + "ISO-8859-1" + "\"" + "?>"  + "\n" +
                		   "<xsl:stylesheet xmlns:xsl=" + "\"" + "http://www.w3.org/1999/XSL/Transform" + "\"" + "  xmlns:ws=" +  "\"" + "http://com.isban.eai.hub.mn/Mvld_HS_PNJPE338/" + "\"" + " version=" + "\"" + "1.0" + "\"" + ">");
                pw.println("\n\t<xsl:output method=" + "\"" + "xml"  + "\"" + "/>");
                pw.println("\t<xsl:template match=" + "\"" + "/"  + "\"" + "/>");
                pw.println("\t\t<ws:Mvld_HS_PNJPE338_Response>");
                pw.println("\t\t\t<OUTPUT>");
                pw.println("\t\t\t\t<INFO>");
                /* Parametros ws_<name>_input   */
                for (int j = 0; j<etiqueta.length; j++){	
            		pw.println("\t\t\t\t\t<" + paramEtiqueta[j] +  "><xsl:value-of select=" + "\"" + etiqueta[j] +  "\"" + "/></" + paramEtiqueta[j] +  ">");
            	}
                pw.println("\t\t\t\t</INFO>");
                pw.println("\t\t\t\t<RELLAMADA>");
                pw.println("\t\t\t\t\t<ID-RECALL><xsl:value-of select=" + "\"" + "//RELLAMADA/ID-RECALL" + "\"" + "/></ID-RECALL>");
                pw.println("\t\t\t\t</RELLAMADA>");
                pw.println("\t\t\t\t<ESCALARES>");
                for (int k = 0; k <escalares.length; k++){
            	pw.println("\t\t\t\t\t\t<" + Etiquetaescalares[k] + "><xsl:value-of select=" + "\"" +  escalares[k] +  "\"" + "/></" + Etiquetaescalares[k] + ">");	
            	}
                pw.println("\t\t\t\t</ESCALARES>");
                pw.println("\t\t\t\t<MATRICES>");
                pw.println("\t\t\t\t\t<MATRIZCAPTACIONES>");
                pw.println("\t\t\t\t\t\t<xsl:for-each select="+ "\"" + "//MATRIZ/e" +  "\"" + ">");
                pw.println("\t\t\t\t\t\t\t<e1>");
                for (int m = 0; m <Matrices.length; m++){
                	pw.println("\t\t\t\t\t\t\t\t\t<" + Matrices[m] + "><xsl:for-each select=" + "\"" +  Captaciones[m] +  "\"" + "/></" + Captaciones[m] + ">");	
                }
                pw.println("\t\t\t\t\t\t\t</e1>");
                pw.println("\t\t\t\t\t\t</xsl:for-each>");
                pw.println("\t\t\t\t\t</MATRIZCAPTACIONES>");
                pw.println("\t\t\t\t\t<MATRIZACTIVOS>");	
                pw.println("\t\t\t\t\t\t<xsl:for-each select="+ "\"" + "//MATRIZ2/e" +  "\"" + ">");
                pw.println("\t\t\t\t\t\t\t<e2>");
                for (int ma = 0; ma <MActivos.length; ma++){
                	pw.println("\t\t\t\t\t\t\t\t\t<" + MActivos[ma] + "><xsl:for-each select=" + "\"" +  CActivos[ma] +  "\"" + "/></" + MActivos[ma] + ">");	
                }
                pw.println("\t\t\t\t\t\t\t</e2>");
                pw.println("\t\t\t\t\t\t</xsl:for-each>");
                pw.println("\t\t\t\t\t</MATRIZACTIVOS>");
                pw.println("\t\t\t\t\t<MATRIZPASIVOS>");	
                pw.println("\t\t\t\t\t\t<xsl:for-each select="+ "\"" + "//MATRIZ3/e" +  "\"" + ">");
                pw.println("\t\t\t\t\t\t\t<e3>");
                for (int mp = 0; mp <MPasivos.length; mp++){
                	pw.println("\t\t\t\t\t\t\t\t\t<" + MActivos[mp] + "><xsl:for-each select=" + "\"" +  CPasivos[mp] +  "\"" + "/></" + MActivos[mp] + ">");	
                }
                pw.println("\t\t\t\t\t\t\t</e3>");
                pw.println("\t\t\t\t\t\t</xsl:for-each>");
                pw.println("\t\t\t\t\t</MATRIZPASIVOS>");
                pw.println("\t\t\t\t</MATRICES>");
                pw.println("\t\t\t</OUTPUT>");		
                pw.println("\t\t</ws:Mvld_HS_PNJPE338_Response>");
                pw.println("\t</xsl:template>");
                
            	/* Cierre Tag xsl:stylesheet> */
            	pw.println("</xsl:stylesheet>");
            }   

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           String HoraFin  = new SimpleDateFormat("HH:mm:ss").format(new Date());
           System.out.println("Tiempo Proceso : Inicio " + HoraIni + " : Fin " + HoraFin );
           
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
    }

}
